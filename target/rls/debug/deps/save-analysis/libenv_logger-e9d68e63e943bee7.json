{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.2","compilation":{"directory":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49],"program":"/home/naufil/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","env_logger","/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.6.1/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"atty\"","--cfg","feature=\"default\"","--cfg","feature=\"humantime\"","--cfg","feature=\"regex\"","--cfg","feature=\"termcolor\"","-C","metadata=e9d68e63e943bee7","-C","extra-filename=-e9d68e63e943bee7","--out-dir","/home/naufil/Desktop/rust/3june/todocopy/target/rls/debug/deps","-L","dependency=/home/naufil/Desktop/rust/3june/todocopy/target/rls/debug/deps","--extern","atty=/home/naufil/Desktop/rust/3june/todocopy/target/rls/debug/deps/libatty-ea994829cdab5812.rmeta","--extern","humantime=/home/naufil/Desktop/rust/3june/todocopy/target/rls/debug/deps/libhumantime-02b20408d5dbb14b.rmeta","--extern","log=/home/naufil/Desktop/rust/3june/todocopy/target/rls/debug/deps/liblog-d8f29b2dbeef7919.rmeta","--extern","regex=/home/naufil/Desktop/rust/3june/todocopy/target/rls/debug/deps/libregex-9deac7b8abc82cb9.rmeta","--extern","termcolor=/home/naufil/Desktop/rust/3june/todocopy/target/rls/debug/deps/libtermcolor-c4c7d773166de868.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/naufil/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":[47,104,111,109,101,47,110,97,117,102,105,108,47,68,101,115,107,116,111,112,47,114,117,115,116,47,51,106,117,110,101,47,116,111,100,111,99,111,112,121,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,101,110,118,95,108,111,103,103,101,114,45,101,57,100,54,56,101,54,51,101,57,52,51,98,101,101,55,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"env_logger","disambiguator":[4718942197018687339,5306929921463556588]},"crate_root":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.6.1/src","external_crates":[{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.6.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[1137707474377317163,881293823083572693]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.6.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16254816028303588237,6669189139375923666]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.6.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7111806954579578569,2199841390691958019]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.6.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6021837240640825503,11520007856923678909]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.6.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12444724012878050064,2416873571855687959]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.6.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6979589238717360547,5382701582921578244]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.6.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14383072016947483551,11019396538837452451]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.6.1/src/lib.rs","num":8,"id":{"name":"rustc_demangle","disambiguator":[15664728184530138178,15668582881963515515]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.6.1/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[16547370833325286379,14798728708606514427]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.6.1/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[3405404226459150258,2890948387317429027]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.6.1/src/lib.rs","num":11,"id":{"name":"log","disambiguator":[417073399476193887,10942851707802455665]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.6.1/src/lib.rs","num":12,"id":{"name":"cfg_if","disambiguator":[17564929995064375520,911619089463124953]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.6.1/src/lib.rs","num":13,"id":{"name":"termcolor","disambiguator":[9525149585034764676,1786851515413936170]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.6.1/src/lib.rs","num":14,"id":{"name":"humantime","disambiguator":[5680085187750159733,7485105321964253481]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.6.1/src/lib.rs","num":15,"id":{"name":"quick_error","disambiguator":[6474495346827456755,1965130401638795089]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.6.1/src/lib.rs","num":16,"id":{"name":"atty","disambiguator":[17054351462273946832,10451140089928582677]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.6.1/src/lib.rs","num":17,"id":{"name":"libc","disambiguator":[8275539938128299520,12225538901635448428]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.6.1/src/filter/regex.rs","num":18,"id":{"name":"regex","disambiguator":[16339672656114799552,17551383937844897292]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.6.1/src/filter/regex.rs","num":19,"id":{"name":"aho_corasick","disambiguator":[3065124741777565266,1091010758082557700]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.6.1/src/filter/regex.rs","num":20,"id":{"name":"memchr","disambiguator":[8948101722026205126,10448406221536703527]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.6.1/src/filter/regex.rs","num":21,"id":{"name":"thread_local","disambiguator":[16488658590755406250,10049300192950294603]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.6.1/src/filter/regex.rs","num":22,"id":{"name":"lazy_static","disambiguator":[348595771024628107,17336960925488172412]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.6.1/src/filter/regex.rs","num":23,"id":{"name":"regex_syntax","disambiguator":[17971087630975106040,12319051428665232745]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.6.1/src/filter/regex.rs","num":24,"id":{"name":"ucd_util","disambiguator":[9163876096227431534,18019813735005034550]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.6.1/src/filter/regex.rs","num":25,"id":{"name":"utf8_ranges","disambiguator":[9249187837120844152,1219933631919644949]}}],"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":472,"byte_end":36512,"line_start":11,"line_end":1170,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,109,111,100,46,114,115],"byte_start":56923,"byte_end":56924,"line_start":43,"line_end":43,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":116}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,109,111,100,46,114,115],"byte_start":56954,"byte_end":56955,"line_start":44,"line_end":44,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"Target, Color, StyledValue, WriteStyle","parent":{"krate":0,"index":116}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9309,"byte_end":9310,"line_start":267,"line_end":267,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"WriteStyle","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":472,"byte_end":36512,"line_start":11,"line_end":1170,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.6.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":20},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":36},{"krate":0,"index":116},{"krate":0,"index":454},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":460},{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":724},{"krate":0,"index":726},{"krate":0,"index":730},{"krate":0,"index":732},{"krate":0,"index":470},{"krate":0,"index":736},{"krate":0,"index":738},{"krate":0,"index":472},{"krate":0,"index":516},{"krate":0,"index":526},{"krate":0,"index":534},{"krate":0,"index":554},{"krate":0,"index":562},{"krate":0,"index":566},{"krate":0,"index":570},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":592},{"krate":0,"index":594}],"decl_id":null,"docs":" A simple logger configured via environment variables which writes\n to stdout or stderr, for use with the logging facade exposed by the\n [`log` crate][log-crate-url].","sig":null,"attributes":[{"value":"deny(missing_debug_implementations, missing_docs, warnings)","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8886,"byte_end":8949,"line_start":247,"line_end":247,"column_start":1,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":36},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,105,108,116,101,114,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"filter","qualname":"::filter","value":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.6.1/src/filter/mod.rs","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":54},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":602},{"krate":0,"index":604},{"krate":0,"index":76},{"krate":0,"index":84},{"krate":0,"index":100},{"krate":0,"index":104},{"krate":0,"index":108},{"krate":0,"index":112},{"krate":0,"index":114}],"decl_id":null,"docs":" Filtering for log records.\n \n This module contains the log filtering used by `env_logger` to match records.\n You can use the `Filter` type in your own logger implementation to use the same \n filter parsing and matching as `env_logger`. For more details about the format \n for directive strings see [Enabling Logging].\n \n ## Using `env_logger` in your own logger","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":72},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,105,108,116,101,114,47,109,111,100,46,114,115],"byte_start":38901,"byte_end":38907,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"Filter","qualname":"::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":21}],"decl_id":null,"docs":" A log filter.\n \n This struct can be used to determine whether or not a log record\n should be written to the output.\n Use the [`Builder`] type to parse and construct a `Filter`.\n \n [`Builder`]: struct.Builder.html\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":74},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,105,108,116,101,114,47,109,111,100,46,114,115],"byte_start":39635,"byte_end":39642,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"Builder","qualname":"::filter::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":25},{"krate":0,"index":27}],"decl_id":null,"docs":" A builder for a log filter.\n \n It can be used to parse a set of directives from a string before building\n a [`Filter`] instance.\n \n ## Example","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,105,108,116,101,114,47,109,111,100,46,114,115],"byte_start":40470,"byte_end":40476,"line_start":150,"line_end":150,"column_start":12,"column_end":18},"name":"filter","qualname":"<Filter>::filter","value":"fn (&self) -> LevelFilter","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum `LevelFilter` that this filter instance is\n configured to output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,105,108,116,101,114,47,109,111,100,46,114,115],"byte_start":40701,"byte_end":40708,"line_start":158,"line_end":158,"column_start":12,"column_end":19},"name":"matches","qualname":"<Filter>::matches","value":"fn (&self, record: &Record) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this record matches the configured filter.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,105,108,116,101,114,47,109,111,100,46,114,115],"byte_start":41109,"byte_end":41116,"line_start":173,"line_end":173,"column_start":12,"column_end":19},"name":"enabled","qualname":"<Filter>::enabled","value":"fn (&self, metadata: &Metadata) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines if a log message with the specified metadata would be logged.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,105,108,116,101,114,47,109,111,100,46,114,115],"byte_start":41372,"byte_end":41375,"line_start":183,"line_end":183,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Initializes the filter builder with defaults.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,105,108,116,101,114,47,109,111,100,46,114,115],"byte_start":41585,"byte_end":41593,"line_start":192,"line_end":192,"column_start":12,"column_end":20},"name":"from_env","qualname":"<Builder>::from_env","value":"fn (env: &str) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Initializes the filter builder from an environment.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,105,108,116,101,114,47,109,111,100,46,114,115],"byte_start":41838,"byte_end":41851,"line_start":203,"line_end":203,"column_start":12,"column_end":25},"name":"filter_module","qualname":"<Builder>::filter_module","value":"fn (&mut self, module: &str, level: LevelFilter) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a directive to the filter for a specific module.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,105,108,116,101,114,47,109,111,100,46,114,115],"byte_start":42027,"byte_end":42039,"line_start":208,"line_end":208,"column_start":12,"column_end":24},"name":"filter_level","qualname":"<Builder>::filter_level","value":"fn (&mut self, level: LevelFilter) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a directive to the filter for all modules.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,105,108,116,101,114,47,109,111,100,46,114,115],"byte_start":42347,"byte_end":42353,"line_start":216,"line_end":216,"column_start":12,"column_end":18},"name":"filter","qualname":"<Builder>::filter","value":"fn (&mut self, module: Option<&str>, level: LevelFilter) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a directive to the filter.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,105,108,116,101,114,47,109,111,100,46,114,115],"byte_start":42785,"byte_end":42790,"line_start":231,"line_end":231,"column_start":12,"column_end":17},"name":"parse","qualname":"<Builder>::parse","value":"fn (&mut self, filters: &str) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Parses the directives string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,105,108,116,101,114,47,109,111,100,46,114,115],"byte_start":43072,"byte_end":43077,"line_start":243,"line_end":243,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"fn (&mut self) -> Filter","parent":null,"children":[],"decl_id":null,"docs":" Build a log filter.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":116},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,109,111,100,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"fmt","qualname":"::fmt","value":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/env_logger-0.6.1/src/fmt/mod.rs","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":334},{"krate":0,"index":382},{"krate":0,"index":384},{"krate":0,"index":386},{"krate":0,"index":392},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":412},{"krate":0,"index":418},{"krate":0,"index":422},{"krate":0,"index":424},{"krate":0,"index":428},{"krate":0,"index":432},{"krate":0,"index":434},{"krate":0,"index":436}],"decl_id":null,"docs":" Formatting for log records.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":71730,"byte_end":71735,"line_start":42,"line_end":42,"column_start":12,"column_end":17},"name":"style","qualname":"<Formatter>::style","value":"fn (&self) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Begin a new [`Style`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":72004,"byte_end":72023,"line_start":52,"line_end":52,"column_start":12,"column_end":31},"name":"default_level_style","qualname":"<Formatter>::default_level_style","value":"fn (&self, level: Level) -> Style","parent":null,"children":[],"decl_id":null,"docs":" Get the default [`Style`] for the given level.\n \n The style can be used to print other values besides the level.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":72645,"byte_end":72665,"line_start":67,"line_end":67,"column_start":12,"column_end":32},"name":"default_styled_level","qualname":"<Formatter>::default_styled_level","value":"fn (&self, level: Level) -> StyledValue<'static, Level>","parent":null,"children":[],"decl_id":null,"docs":" Get a printable [`Style`] for the given level.\n \n The style can only be used to print the level.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":608},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":77069,"byte_end":77074,"line_start":230,"line_end":230,"column_start":12,"column_end":17},"name":"Style","qualname":"::fmt::writer::termcolor::imp::Style","value":"Style {  }","parent":null,"children":[{"krate":0,"index":211},{"krate":0,"index":213}],"decl_id":null,"docs":" A set of styles to apply to the terminal output.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":220},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":77309,"byte_end":77320,"line_start":240,"line_end":240,"column_start":12,"column_end":23},"name":"StyledValue","qualname":"::fmt::writer::termcolor::imp::StyledValue","value":"StyledValue {  }","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":61}],"decl_id":null,"docs":" A value that can be printed using the given styles.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":77874,"byte_end":77883,"line_start":266,"line_end":266,"column_start":12,"column_end":21},"name":"set_color","qualname":"<Style>::set_color","value":"fn (&mut self, color: Color) -> &mut Style","parent":null,"children":[],"decl_id":null,"docs":" Set the text color.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":78584,"byte_end":78592,"line_start":293,"line_end":293,"column_start":12,"column_end":20},"name":"set_bold","qualname":"<Style>::set_bold","value":"fn (&mut self, yes: bool) -> &mut Style","parent":null,"children":[],"decl_id":null,"docs":" Set the text weight.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":79293,"byte_end":79304,"line_start":320,"line_end":320,"column_start":12,"column_end":23},"name":"set_intense","qualname":"<Style>::set_intense","value":"fn (&mut self, yes: bool) -> &mut Style","parent":null,"children":[],"decl_id":null,"docs":" Set the text intensity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":79903,"byte_end":79909,"line_start":345,"line_end":345,"column_start":12,"column_end":18},"name":"set_bg","qualname":"<Style>::set_bg","value":"fn (&mut self, color: Color) -> &mut Style","parent":null,"children":[],"decl_id":null,"docs":" Set the background color.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":80701,"byte_end":80706,"line_start":374,"line_end":374,"column_start":12,"column_end":17},"name":"value","qualname":"<Style>::value","value":"fn <T> (&self, value: T) -> StyledValue<T>","parent":null,"children":[],"decl_id":null,"docs":" Wrap a value in the style.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":269},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":83327,"byte_end":83332,"line_start":460,"line_end":460,"column_start":5,"column_end":10},"name":"Black","qualname":"::fmt::writer::termcolor::imp::Color::Black","value":"Color::Black","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":273},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":83338,"byte_end":83342,"line_start":461,"line_end":461,"column_start":5,"column_end":9},"name":"Blue","qualname":"::fmt::writer::termcolor::imp::Color::Blue","value":"Color::Blue","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":277},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":83348,"byte_end":83353,"line_start":462,"line_end":462,"column_start":5,"column_end":10},"name":"Green","qualname":"::fmt::writer::termcolor::imp::Color::Green","value":"Color::Green","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":281},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":83359,"byte_end":83362,"line_start":463,"line_end":463,"column_start":5,"column_end":8},"name":"Red","qualname":"::fmt::writer::termcolor::imp::Color::Red","value":"Color::Red","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":285},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":83368,"byte_end":83372,"line_start":464,"line_end":464,"column_start":5,"column_end":9},"name":"Cyan","qualname":"::fmt::writer::termcolor::imp::Color::Cyan","value":"Color::Cyan","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":289},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":83378,"byte_end":83385,"line_start":465,"line_end":465,"column_start":5,"column_end":12},"name":"Magenta","qualname":"::fmt::writer::termcolor::imp::Color::Magenta","value":"Color::Magenta","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":293},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":83391,"byte_end":83397,"line_start":466,"line_end":466,"column_start":5,"column_end":11},"name":"Yellow","qualname":"::fmt::writer::termcolor::imp::Color::Yellow","value":"Color::Yellow","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":297},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":83403,"byte_end":83408,"line_start":467,"line_end":467,"column_start":5,"column_end":10},"name":"White","qualname":"::fmt::writer::termcolor::imp::Color::White","value":"Color::White","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":301},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":83414,"byte_end":83421,"line_start":468,"line_end":468,"column_start":5,"column_end":12},"name":"Ansi256","qualname":"::fmt::writer::termcolor::imp::Color::Ansi256","value":"Color::Ansi256(u8)","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":307},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":83431,"byte_end":83434,"line_start":469,"line_end":469,"column_start":5,"column_end":8},"name":"Rgb","qualname":"::fmt::writer::termcolor::imp::Color::Rgb","value":"Color::Rgb(u8, u8, u8)","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":317},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":83471,"byte_end":83486,"line_start":471,"line_end":471,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::fmt::writer::termcolor::imp::Color::__Nonexhaustive","value":"Color::__Nonexhaustive","parent":{"krate":0,"index":650},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":650},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":83315,"byte_end":83320,"line_start":459,"line_end":459,"column_start":10,"column_end":15},"name":"Color","qualname":"::fmt::writer::termcolor::imp::Color","value":"Color::{Black, Blue, Green, Red, Cyan, Magenta, Yellow, White, Ansi256, Rgb, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":273},{"krate":0,"index":277},{"krate":0,"index":281},{"krate":0,"index":285},{"krate":0,"index":289},{"krate":0,"index":293},{"krate":0,"index":297},{"krate":0,"index":301},{"krate":0,"index":307},{"krate":0,"index":317}],"decl_id":null,"docs":" The set of available colors for the terminal foreground/background.","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":83244,"byte_end":83266,"line_start":457,"line_end":457,"column_start":1,"column_end":23}},{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":83306,"byte_end":83489,"line_start":459,"line_end":472,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":321},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,109,111,100,46,114,115],"byte_start":65811,"byte_end":65817,"line_start":19,"line_end":19,"column_start":5,"column_end":11},"name":"Stdout","qualname":"::fmt::writer::Target::Stdout","value":"Target::Stdout","parent":{"krate":0,"index":670},"children":[],"decl_id":null,"docs":" Logs will be sent to standard output.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":325},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,109,111,100,46,114,115],"byte_start":65868,"byte_end":65874,"line_start":21,"line_end":21,"column_start":5,"column_end":11},"name":"Stderr","qualname":"::fmt::writer::Target::Stderr","value":"Target::Stderr","parent":{"krate":0,"index":670},"children":[],"decl_id":null,"docs":" Logs will be sent to standard error.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":670},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,109,111,100,46,114,115],"byte_start":65752,"byte_end":65758,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"name":"Target","qualname":"::fmt::writer::Target","value":"Target::{Stdout, Stderr}","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":325}],"decl_id":null,"docs":" Log target, either `stdout` or `stderr`.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,109,111,100,46,114,115],"byte_start":65743,"byte_end":65877,"line_start":17,"line_end":22,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,109,111,100,46,114,115],"byte_start":65743,"byte_end":65877,"line_start":17,"line_end":22,"column_start":1,"column_end":2}}]},{"kind":"TupleVariant","id":{"krate":0,"index":331},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,109,111,100,46,114,115],"byte_start":66147,"byte_end":66151,"line_start":34,"line_end":34,"column_start":5,"column_end":9},"name":"Auto","qualname":"::fmt::writer::WriteStyle::Auto","value":"WriteStyle::Auto","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" Try to print styles, but don't force the issue.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":335},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,109,111,100,46,114,115],"byte_start":66196,"byte_end":66202,"line_start":36,"line_end":36,"column_start":5,"column_end":11},"name":"Always","qualname":"::fmt::writer::WriteStyle::Always","value":"WriteStyle::Always","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" Try very hard to print styles.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":339},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,109,111,100,46,114,115],"byte_start":66236,"byte_end":66241,"line_start":38,"line_end":38,"column_start":5,"column_end":10},"name":"Never","qualname":"::fmt::writer::WriteStyle::Never","value":"WriteStyle::Never","parent":{"krate":0,"index":694},"children":[],"decl_id":null,"docs":" Never print styles.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":694},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,109,111,100,46,114,115],"byte_start":66074,"byte_end":66084,"line_start":32,"line_end":32,"column_start":10,"column_end":20},"name":"WriteStyle","qualname":"::fmt::writer::WriteStyle","value":"WriteStyle::{Auto, Always, Never}","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":335},{"krate":0,"index":339}],"decl_id":null,"docs":" Whether or not to print styles to the target.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,109,111,100,46,114,115],"byte_start":66065,"byte_end":66244,"line_start":32,"line_end":39,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,109,111,100,46,114,115],"byte_start":66065,"byte_end":66244,"line_start":32,"line_end":39,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":356},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,104,117,109,97,110,116,105,109,101,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":86014,"byte_end":86023,"line_start":32,"line_end":32,"column_start":12,"column_end":21},"name":"timestamp","qualname":"<Formatter>::timestamp","value":"fn (&self) -> Timestamp","parent":null,"children":[],"decl_id":null,"docs":" Get a [`Timestamp`] for the current date and time in UTC.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,104,117,109,97,110,116,105,109,101,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":86185,"byte_end":86202,"line_start":37,"line_end":37,"column_start":12,"column_end":29},"name":"precise_timestamp","qualname":"<Formatter>::precise_timestamp","value":"fn (&self) -> PreciseTimestamp","parent":null,"children":[],"decl_id":null,"docs":" Get a [`PreciseTimestamp`] for the current date and time in UTC with nanos.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":360},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,104,117,109,97,110,116,105,109,101,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":86592,"byte_end":86601,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"Timestamp","qualname":"::fmt::humantime::imp::Timestamp","value":"","parent":null,"children":[],"decl_id":null,"docs":" An [RFC3339] formatted timestamp.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":718},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,104,117,109,97,110,116,105,109,101,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":86749,"byte_end":86765,"line_start":55,"line_end":55,"column_start":12,"column_end":28},"name":"PreciseTimestamp","qualname":"::fmt::humantime::imp::PreciseTimestamp","value":"","parent":null,"children":[],"decl_id":null,"docs":" An [RFC3339] formatted timestamp with nanos.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":400},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,109,111,100,46,114,115],"byte_start":57787,"byte_end":57796,"line_start":73,"line_end":73,"column_start":12,"column_end":21},"name":"Formatter","qualname":"::fmt::Formatter","value":"Formatter {  }","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":103}],"decl_id":null,"docs":" A formatter to write logs into.","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":466},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9487,"byte_end":9505,"line_start":274,"line_end":274,"column_start":11,"column_end":29},"name":"DEFAULT_FILTER_ENV","qualname":"::DEFAULT_FILTER_ENV","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" The default name for the environment variable to read filters from.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":468},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9627,"byte_end":9650,"line_start":277,"line_end":277,"column_start":11,"column_end":34},"name":"DEFAULT_WRITE_STYLE_ENV","qualname":"::DEFAULT_WRITE_STYLE_ENV","value":"&'static str","parent":null,"children":[],"decl_id":null,"docs":" The default name for the environment variable to read style preferences from.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":724},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10067,"byte_end":10070,"line_start":290,"line_end":290,"column_start":12,"column_end":15},"name":"Env","qualname":"::Env","value":"Env {  }","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":353}],"decl_id":null,"docs":" Set of environment variables to configure from.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":470},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11022,"byte_end":11028,"line_start":320,"line_end":320,"column_start":12,"column_end":18},"name":"Logger","qualname":"::Logger","value":"Logger {  }","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":141}],"decl_id":null,"docs":" The env logger.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":736},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11938,"byte_end":11945,"line_start":355,"line_end":355,"column_start":12,"column_end":19},"name":"Builder","qualname":"::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":371}],"decl_id":null,"docs":" `Builder` acts as builder for initializing a `Logger`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":474},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13021,"byte_end":13024,"line_start":392,"line_end":392,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Initializes the log builder with defaults.\n \n **NOTE:** This method won't read from any environment variables.\n Use the [`filter`] and [`write_style`] methods to configure the builder\n or use [`from_env`] or [`from_default_env`] instead.\n \n # Examples\n \n Create a new builder and configure filters and style:\n \n ```\n # extern crate log;\n # extern crate env_logger;\n # fn main() {\n use log::LevelFilter;\n use env_logger::{Builder, WriteStyle};\n \n let mut builder = Builder::new();\n \n builder.filter(None, LevelFilter::Info)\n        .write_style(WriteStyle::Always)\n        .init();\n # }\n ```\n \n [`filter`]: #method.filter\n [`write_style`]: #method.write_style\n [`from_env`]: #method.from_env\n [`from_default_env`]: #method.from_default_env\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":476},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13920,"byte_end":13928,"line_start":424,"line_end":424,"column_start":12,"column_end":20},"name":"from_env","qualname":"<Builder>::from_env","value":"fn <'a, E> (env: E) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initializes the log builder from the environment.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14946,"byte_end":14962,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"from_default_env","qualname":"<Builder>::from_default_env","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initializes the log builder from the environment using default variable names.\n \n This method is a convenient way to call `from_env(Env::default())` without\n having to use the `Env` type explicitly. The builder will use the\n [default environment variables].\n \n # Examples\n \n Initialise a logger using the default environment variables:\n \n ```\n use env_logger::Builder;\n \n let mut builder = Builder::from_default_env();\n builder.init();\n ```","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16069,"byte_end":16075,"line_start":490,"line_end":490,"column_start":12,"column_end":18},"name":"format","qualname":"<Builder>::format","value":"fn <F> (&mut self, format: F) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the format function for formatting the log output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":482},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16407,"byte_end":16421,"line_start":500,"line_end":500,"column_start":12,"column_end":26},"name":"default_format","qualname":"<Builder>::default_format","value":"fn (&mut self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Use the default format.\n \n This method will clear any custom format set on the builder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16586,"byte_end":16606,"line_start":506,"line_end":506,"column_start":12,"column_end":32},"name":"default_format_level","qualname":"<Builder>::default_format_level","value":"fn (&mut self, write: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Whether or not to write the level in the default format.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16798,"byte_end":16824,"line_start":512,"line_end":512,"column_start":12,"column_end":38},"name":"default_format_module_path","qualname":"<Builder>::default_format_module_path","value":"fn (&mut self, write: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Whether or not to write the module path in the default format.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17020,"byte_end":17044,"line_start":518,"line_end":518,"column_start":12,"column_end":36},"name":"default_format_timestamp","qualname":"<Builder>::default_format_timestamp","value":"fn (&mut self, write: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Whether or not to write the timestamp in the default format.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17227,"byte_end":17257,"line_start":524,"line_end":524,"column_start":12,"column_end":42},"name":"default_format_timestamp_nanos","qualname":"<Builder>::default_format_timestamp_nanos","value":"fn (&mut self, write: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Whether or not to write the timestamp with nanos.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17889,"byte_end":17902,"line_start":547,"line_end":547,"column_start":12,"column_end":25},"name":"filter_module","qualname":"<Builder>::filter_module","value":"fn (&mut self, module: &str, level: LevelFilter) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a directive to the filter for a specific module.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18518,"byte_end":18530,"line_start":570,"line_end":570,"column_start":12,"column_end":24},"name":"filter_level","qualname":"<Builder>::filter_level","value":"fn (&mut self, level: LevelFilter) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Adds a directive to the filter for all modules.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19298,"byte_end":19304,"line_start":596,"line_end":596,"column_start":12,"column_end":18},"name":"filter","qualname":"<Builder>::filter","value":"fn (&mut self, module: Option<&str>, level: LevelFilter) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Adds filters to the logger.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19722,"byte_end":19727,"line_start":608,"line_end":608,"column_start":12,"column_end":17},"name":"parse","qualname":"<Builder>::parse","value":"fn (&mut self, filters: &str) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Parses the directives string in the same form as the `RUST_LOG`\n environment variable.","sig":null,"attributes":[{"value":"deprecated(since = \"0.6.1\", note = \"use `parse_filters` instead.\")","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19641,"byte_end":19710,"line_start":607,"line_end":607,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19988,"byte_end":20001,"line_start":616,"line_end":616,"column_start":12,"column_end":25},"name":"parse_filters","qualname":"<Builder>::parse_filters","value":"fn (&mut self, filters: &str) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Parses the directives string in the same form as the `RUST_LOG`\n environment variable.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":502},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":20492,"byte_end":20498,"line_start":636,"line_end":636,"column_start":12,"column_end":18},"name":"target","qualname":"<Builder>::target","value":"fn (&mut self, target: fmt::Target) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the target for the log output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":504},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21046,"byte_end":21057,"line_start":657,"line_end":657,"column_start":12,"column_end":23},"name":"write_style","qualname":"<Builder>::write_style","value":"fn (&mut self, write_style: fmt::WriteStyle) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not styles will be written.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21371,"byte_end":21388,"line_start":666,"line_end":666,"column_start":12,"column_end":29},"name":"parse_write_style","qualname":"<Builder>::parse_write_style","value":"fn (&mut self, write_style: &str) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Parses whether or not to write styles in the same form as the `RUST_LOG_STYLE`\n environment variable.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21756,"byte_end":21763,"line_start":675,"line_end":675,"column_start":12,"column_end":19},"name":"is_test","qualname":"<Builder>::is_test","value":"fn (&mut self, is_test: bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the logger will be used in unit tests.\n \n If `is_test` is `true` then the logger will allow the testing framework to\n capture log records rather than printing them to the terminal directly.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22260,"byte_end":22268,"line_start":689,"line_end":689,"column_start":12,"column_end":20},"name":"try_init","qualname":"<Builder>::try_init","value":"fn (&mut self) -> Result<(), SetLoggerError>","parent":null,"children":[],"decl_id":null,"docs":" Initializes the global logger with the built env logger.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22939,"byte_end":22943,"line_start":711,"line_end":711,"column_start":12,"column_end":16},"name":"init","qualname":"<Builder>::init","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Initializes the global logger with the built env logger.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23233,"byte_end":23238,"line_start":719,"line_end":719,"column_start":12,"column_end":17},"name":"build","qualname":"<Builder>::build","value":"fn (&mut self) -> Logger","parent":null,"children":[],"decl_id":null,"docs":" Build an env logger.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":24319,"byte_end":24327,"line_start":758,"line_end":758,"column_start":12,"column_end":20},"name":"from_env","qualname":"<Logger>::from_env","value":"fn <'a, E> (env: E) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates the logger from the environment.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":25057,"byte_end":25073,"line_start":782,"line_end":782,"column_start":12,"column_end":28},"name":"from_default_env","qualname":"<Logger>::from_default_env","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates the logger from the environment using default variable names.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":25253,"byte_end":25259,"line_start":788,"line_end":788,"column_start":12,"column_end":18},"name":"filter","qualname":"<Logger>::filter","value":"fn (&self) -> LevelFilter","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum `LevelFilter` that this env logger instance is\n configured to output.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":25392,"byte_end":25399,"line_start":793,"line_end":793,"column_start":12,"column_end":19},"name":"matches","qualname":"<Logger>::matches","value":"fn (&self, record: &Record) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks if this record matches the configured filter.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":27983,"byte_end":27986,"line_start":860,"line_end":860,"column_start":12,"column_end":15},"name":"new","qualname":"<Env>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get a default set of environment variables.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":28106,"byte_end":28112,"line_start":865,"line_end":865,"column_start":12,"column_end":18},"name":"filter","qualname":"<Env>::filter","value":"fn <E> (mut self, filter_env: E) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify an environment variable to read the filter from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":28412,"byte_end":28421,"line_start":877,"line_end":877,"column_start":12,"column_end":21},"name":"filter_or","qualname":"<Env>::filter_or","value":"fn <E, V> (mut self, filter_env: E, default: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify an environment variable to read the filter from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":28796,"byte_end":28813,"line_start":890,"line_end":890,"column_start":12,"column_end":29},"name":"default_filter_or","qualname":"<Env>::default_filter_or","value":"fn <V> (mut self, default: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Use the default environment variable to read the filter from.\n \n If the variable is not set, the default value will be used.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":29142,"byte_end":29153,"line_start":904,"line_end":904,"column_start":12,"column_end":23},"name":"write_style","qualname":"<Env>::write_style","value":"fn <E> (mut self, write_style_env: E) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify an environment variable to read the style from.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":29467,"byte_end":29481,"line_start":916,"line_end":916,"column_start":12,"column_end":26},"name":"write_style_or","qualname":"<Env>::write_style_or","value":"fn <E, V> (mut self, write_style_env: E, default: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Specify an environment variable to read the style from.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":29881,"byte_end":29903,"line_start":929,"line_end":929,"column_start":12,"column_end":34},"name":"default_write_style_or","qualname":"<Env>::default_write_style_or","value":"fn <V> (mut self, default: V) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Use the default environment variable to read the style from.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":584},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":32268,"byte_end":32276,"line_start":1029,"line_end":1029,"column_start":8,"column_end":16},"name":"try_init","qualname":"::try_init","value":"fn () -> Result<(), SetLoggerError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to initialize the global logger with an env logger.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":586},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":32703,"byte_end":32707,"line_start":1042,"line_end":1042,"column_start":8,"column_end":12},"name":"init","qualname":"::init","value":"fn () -> ()","parent":null,"children":[],"decl_id":null,"docs":" Initializes the global logger with an env logger.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":588},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":33671,"byte_end":33688,"line_start":1075,"line_end":1075,"column_start":8,"column_end":25},"name":"try_init_from_env","qualname":"::try_init_from_env","value":"fn <'a, E> (env: E) -> Result<(), SetLoggerError>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to initialize the global logger with an env logger from the given\n environment variables.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":590},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":34541,"byte_end":34554,"line_start":1107,"line_end":1107,"column_start":8,"column_end":21},"name":"init_from_env","qualname":"::init_from_env","value":"fn <'a, E> (env: E) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Initializes the global logger with an env logger from the given environment\n variables.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":592},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":34849,"byte_end":34856,"line_start":1117,"line_end":1117,"column_start":8,"column_end":15},"name":"builder","qualname":"::builder","value":"fn () -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Create a new builder with the default environment variables.\n \n The builder can be configured before being initialized.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":594},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":35038,"byte_end":35046,"line_start":1124,"line_end":1124,"column_start":8,"column_end":16},"name":"from_env","qualname":"::from_env","value":"fn <'a, E> (env: E) -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Create a builder from the given environment variables.\n \n The builder can be configured before being initialized.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,105,108,116,101,114,47,114,101,103,101,120,46,114,115],"byte_start":55327,"byte_end":55333,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,105,108,116,101,114,47,114,101,103,101,120,46,114,115],"byte_start":55636,"byte_end":55642,"line_start":25,"line_end":25,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,105,108,116,101,114,47,109,111,100,46,114,115],"byte_start":39826,"byte_end":39832,"line_start":128,"line_end":128,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,105,108,116,101,114,47,109,111,100,46,114,115],"byte_start":41297,"byte_end":41304,"line_start":181,"line_end":181,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,105,108,116,101,114,47,109,111,100,46,114,115],"byte_start":44004,"byte_end":44011,"line_start":270,"line_end":270,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,105,108,116,101,114,47,109,111,100,46,114,115],"byte_start":44093,"byte_end":44099,"line_start":276,"line_end":276,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,105,108,116,101,114,47,109,111,100,46,114,115],"byte_start":44337,"byte_end":44344,"line_start":285,"line_end":285,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":71060,"byte_end":71069,"line_start":17,"line_end":17,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":73004,"byte_end":73016,"line_start":82,"line_end":82,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":74494,"byte_end":74500,"line_start":131,"line_end":131,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":75390,"byte_end":75400,"line_start":167,"line_end":167,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":77379,"byte_end":77384,"line_start":245,"line_end":245,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":81103,"byte_end":81114,"line_start":390,"line_end":390,"column_start":13,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":81550,"byte_end":81555,"line_start":405,"line_end":405,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":83496,"byte_end":83501,"line_start":474,"line_end":474,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,109,111,100,46,114,115],"byte_start":65896,"byte_end":65902,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,109,111,100,46,114,115],"byte_start":66263,"byte_end":66273,"line_start":41,"line_end":41,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,109,111,100,46,114,115],"byte_start":66470,"byte_end":66476,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,109,111,100,46,114,115],"byte_start":66975,"byte_end":66982,"line_start":77,"line_end":77,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":312},{"krate":0,"index":314},{"krate":0,"index":316},{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,109,111,100,46,114,115],"byte_start":69044,"byte_end":69051,"line_start":146,"line_end":146,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,109,111,100,46,114,115],"byte_start":69133,"byte_end":69140,"line_start":152,"line_end":152,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,109,111,100,46,114,115],"byte_start":69368,"byte_end":69374,"line_start":161,"line_end":161,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,104,117,109,97,110,116,105,109,101,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":85476,"byte_end":85485,"line_start":12,"line_end":12,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":358}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,104,117,109,97,110,116,105,109,101,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":86800,"byte_end":86809,"line_start":57,"line_end":57,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,104,117,109,97,110,116,105,109,101,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":87040,"byte_end":87054,"line_start":62,"line_end":62,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,104,117,109,97,110,116,105,109,101,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":87322,"byte_end":87331,"line_start":74,"line_end":74,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,104,117,109,97,110,116,105,109,101,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":87468,"byte_end":87484,"line_start":80,"line_end":80,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,109,111,100,46,114,115],"byte_start":57866,"byte_end":57875,"line_start":78,"line_end":78,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,109,111,100,46,114,115],"byte_start":58368,"byte_end":58377,"line_start":99,"line_end":99,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":414},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,109,111,100,46,114,115],"byte_start":58598,"byte_end":58607,"line_start":109,"line_end":109,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,109,111,100,46,114,115],"byte_start":59047,"byte_end":59054,"line_start":124,"line_end":124,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,109,111,100,46,114,115],"byte_start":59366,"byte_end":59373,"line_start":137,"line_end":137,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,109,111,100,46,114,115],"byte_start":61013,"byte_end":61026,"line_start":188,"line_end":188,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":442},{"krate":0,"index":444},{"krate":0,"index":446},{"krate":0,"index":448},{"krate":0,"index":450},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12057,"byte_end":12064,"line_start":362,"line_end":362,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":476},{"krate":0,"index":478},{"krate":0,"index":480},{"krate":0,"index":482},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":490},{"krate":0,"index":492},{"krate":0,"index":494},{"krate":0,"index":496},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":502},{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":508},{"krate":0,"index":510},{"krate":0,"index":512},{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23522,"byte_end":23528,"line_start":731,"line_end":731,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":518},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":25492,"byte_end":25498,"line_start":798,"line_end":798,"column_start":14,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":530},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":27910,"byte_end":27913,"line_start":858,"line_end":858,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":542},{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":548},{"krate":0,"index":550},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":30196,"byte_end":30199,"line_start":943,"line_end":943,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":556},{"krate":0,"index":558},{"krate":0,"index":560}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":30849,"byte_end":30852,"line_start":974,"line_end":974,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":31007,"byte_end":31010,"line_start":983,"line_end":983,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":31268,"byte_end":31274,"line_start":996,"line_end":996,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":31488,"byte_end":31495,"line_start":1004,"line_end":1004,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":582}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9262,"byte_end":9268,"line_start":264,"line_end":264,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":36}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9278,"byte_end":9281,"line_start":265,"line_end":265,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":116}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,105,108,116,101,114,47,114,101,103,101,120,46,114,115],"byte_start":55327,"byte_end":55333,"line_start":12,"line_end":12,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":596},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,105,108,116,101,114,47,114,101,103,101,120,46,114,115],"byte_start":55636,"byte_end":55642,"line_start":25,"line_end":25,"column_start":23,"column_end":29},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":596},"to":{"krate":2,"index":8472}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,105,108,116,101,114,47,109,111,100,46,114,115],"byte_start":39826,"byte_end":39832,"line_start":128,"line_end":128,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":72},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,105,108,116,101,114,47,109,111,100,46,114,115],"byte_start":41297,"byte_end":41304,"line_start":181,"line_end":181,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":74},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,105,108,116,101,114,47,109,111,100,46,114,115],"byte_start":44004,"byte_end":44011,"line_start":270,"line_end":270,"column_start":18,"column_end":25},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":74},"to":{"krate":2,"index":2648}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,105,108,116,101,114,47,109,111,100,46,114,115],"byte_start":44093,"byte_end":44099,"line_start":276,"line_end":276,"column_start":21,"column_end":27},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":72},"to":{"krate":2,"index":8468}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,105,108,116,101,114,47,109,111,100,46,114,115],"byte_start":44337,"byte_end":44344,"line_start":285,"line_end":285,"column_start":21,"column_end":28},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":74},"to":{"krate":2,"index":8468}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":71060,"byte_end":71069,"line_start":17,"line_end":17,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":73004,"byte_end":73016,"line_start":82,"line_end":82,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":74494,"byte_end":74500,"line_start":131,"line_end":131,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":190},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":75390,"byte_end":75400,"line_start":167,"line_end":167,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":694},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":77379,"byte_end":77384,"line_start":245,"line_end":245,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":608},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":81103,"byte_end":81114,"line_start":390,"line_end":390,"column_start":13,"column_end":24},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":81550,"byte_end":81555,"line_start":405,"line_end":405,"column_start":21,"column_end":26},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":608},"to":{"krate":2,"index":8468}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,116,101,114,109,99,111,108,111,114,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":83496,"byte_end":83501,"line_start":474,"line_end":474,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":650},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,109,111,100,46,114,115],"byte_start":65896,"byte_end":65902,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":670},"to":{"krate":2,"index":2648}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,109,111,100,46,114,115],"byte_start":66263,"byte_end":66273,"line_start":41,"line_end":41,"column_start":18,"column_end":28},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":694},"to":{"krate":2,"index":2648}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,109,111,100,46,114,115],"byte_start":66470,"byte_end":66476,"line_start":53,"line_end":53,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":294},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,109,111,100,46,114,115],"byte_start":66975,"byte_end":66982,"line_start":77,"line_end":77,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":304},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,109,111,100,46,114,115],"byte_start":69044,"byte_end":69051,"line_start":146,"line_end":146,"column_start":18,"column_end":25},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":304},"to":{"krate":2,"index":2648}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,109,111,100,46,114,115],"byte_start":69133,"byte_end":69140,"line_start":152,"line_end":152,"column_start":21,"column_end":28},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":304},"to":{"krate":2,"index":8468}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,119,114,105,116,101,114,47,109,111,100,46,114,115],"byte_start":69368,"byte_end":69374,"line_start":161,"line_end":161,"column_start":21,"column_end":27},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":294},"to":{"krate":2,"index":8468}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,104,117,109,97,110,116,105,109,101,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":85476,"byte_end":85485,"line_start":12,"line_end":12,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,104,117,109,97,110,116,105,109,101,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":86800,"byte_end":86809,"line_start":57,"line_end":57,"column_start":21,"column_end":30},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":360},"to":{"krate":2,"index":8468}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,104,117,109,97,110,116,105,109,101,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":87040,"byte_end":87054,"line_start":62,"line_end":62,"column_start":33,"column_end":47},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":0,"index":366},"to":{"krate":2,"index":8468}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,104,117,109,97,110,116,105,109,101,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":87322,"byte_end":87331,"line_start":74,"line_end":74,"column_start":23,"column_end":32},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":360},"to":{"krate":2,"index":8472}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,104,117,109,97,110,116,105,109,101,47,101,120,116,101,114,110,95,105,109,112,108,46,114,115],"byte_start":87468,"byte_end":87484,"line_start":80,"line_end":80,"column_start":23,"column_end":39},"kind":{"variant":"Impl","fields":[26]},"from":{"krate":0,"index":718},"to":{"krate":2,"index":8472}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,109,111,100,46,114,115],"byte_start":57866,"byte_end":57875,"line_start":78,"line_end":78,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[27]},"from":{"krate":0,"index":400},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,109,111,100,46,114,115],"byte_start":58368,"byte_end":58377,"line_start":99,"line_end":99,"column_start":16,"column_end":25},"kind":{"variant":"Impl","fields":[28]},"from":{"krate":0,"index":400},"to":{"krate":1,"index":4532}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,109,111,100,46,114,115],"byte_start":58598,"byte_end":58607,"line_start":109,"line_end":109,"column_start":21,"column_end":30},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":0,"index":400},"to":{"krate":2,"index":8468}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,109,111,100,46,114,115],"byte_start":59047,"byte_end":59054,"line_start":124,"line_end":124,"column_start":18,"column_end":25},"kind":{"variant":"Impl","fields":[30]},"from":{"krate":0,"index":422},"to":{"krate":2,"index":2648}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,109,111,100,46,114,115],"byte_start":59366,"byte_end":59373,"line_start":137,"line_end":137,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[31]},"from":{"krate":0,"index":422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,102,109,116,47,109,111,100,46,114,115],"byte_start":61013,"byte_end":61026,"line_start":188,"line_end":188,"column_start":10,"column_end":23},"kind":{"variant":"Impl","fields":[32]},"from":{"krate":0,"index":434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12057,"byte_end":12064,"line_start":362,"line_end":362,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[33]},"from":{"krate":0,"index":736},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23522,"byte_end":23528,"line_start":731,"line_end":731,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[34]},"from":{"krate":0,"index":470},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":25492,"byte_end":25498,"line_start":798,"line_end":798,"column_start":14,"column_end":20},"kind":{"variant":"Impl","fields":[35]},"from":{"krate":0,"index":470},"to":{"krate":11,"index":246}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":27910,"byte_end":27913,"line_start":858,"line_end":858,"column_start":10,"column_end":13},"kind":{"variant":"Impl","fields":[36]},"from":{"krate":0,"index":724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":30196,"byte_end":30199,"line_start":943,"line_end":943,"column_start":10,"column_end":13},"kind":{"variant":"Impl","fields":[37]},"from":{"krate":0,"index":730},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":30849,"byte_end":30852,"line_start":974,"line_end":974,"column_start":25,"column_end":28},"kind":{"variant":"Impl","fields":[38]},"from":{"krate":0,"index":724},"to":{"krate":2,"index":2672}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":31007,"byte_end":31010,"line_start":983,"line_end":983,"column_start":22,"column_end":25},"kind":{"variant":"Impl","fields":[39]},"from":{"krate":0,"index":724},"to":{"krate":2,"index":2648}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":31268,"byte_end":31274,"line_start":996,"line_end":996,"column_start":25,"column_end":31},"kind":{"variant":"Impl","fields":[40]},"from":{"krate":0,"index":470},"to":{"krate":2,"index":8468}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,101,110,118,95,108,111,103,103,101,114,45,48,46,54,46,49,47,115,114,99,47,108,105,98,46,114,115],"byte_start":31488,"byte_end":31495,"line_start":1004,"line_end":1004,"column_start":25,"column_end":32},"kind":{"variant":"Impl","fields":[41]},"from":{"krate":0,"index":736},"to":{"krate":2,"index":8468}}]}