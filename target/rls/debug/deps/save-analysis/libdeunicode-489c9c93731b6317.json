{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.2","compilation":{"directory":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,117,110,105,99,111,100,101,45,48,46,52,46,51],"program":"/home/naufil/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","deunicode","/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=489c9c93731b6317","-C","extra-filename=-489c9c93731b6317","--out-dir","/home/naufil/Desktop/rust/3june/todocopy/target/rls/debug/deps","-L","dependency=/home/naufil/Desktop/rust/3june/todocopy/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/naufil/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":[47,104,111,109,101,47,110,97,117,102,105,108,47,68,101,115,107,116,111,112,47,114,117,115,116,47,51,106,117,110,101,47,116,111,100,111,99,111,112,121,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,100,101,117,110,105,99,111,100,101,45,52,56,57,99,57,99,57,51,55,51,49,98,54,51,49,55,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"deunicode","disambiguator":[3033363159908876915,16929500803925404882]},"crate_root":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src","external_crates":[{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[1137707474377317163,881293823083572693]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16254816028303588237,6669189139375923666]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7111806954579578569,2199841390691958019]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6021837240640825503,11520007856923678909]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12444724012878050064,2416873571855687959]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6979589238717360547,5382701582921578244]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14383072016947483551,11019396538837452451]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","num":8,"id":{"name":"rustc_demangle","disambiguator":[15664728184530138178,15668582881963515515]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[16547370833325286379,14798728708606514427]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[3405404226459150258,2890948387317429027]}}],"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,117,110,105,99,111,100,101,45,48,46,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":7619,"line_start":1,"line_end":212,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,117,110,105,99,111,100,101,45,48,46,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":7619,"line_start":1,"line_end":212,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/deunicode-0.4.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":56},{"krate":0,"index":62},{"krate":0,"index":58},{"krate":0,"index":12},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":20},{"krate":0,"index":26},{"krate":0,"index":32},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":44},{"krate":0,"index":46}],"decl_id":null,"docs":" The `deunicode` library transliterates Unicode strings such as \"Ã†neid\" into pure\n ASCII ones such as \"AEneid.\"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":14},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,117,110,105,99,111,100,101,45,48,46,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2642,"byte_end":2651,"line_start":63,"line_end":63,"column_start":8,"column_end":17},"name":"deunicode","qualname":"::deunicode","value":"fn (s: &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" This function takes any Unicode string and returns an ASCII transliteration\n of that string.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,117,110,105,99,111,100,101,45,48,46,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2625,"byte_end":2634,"line_start":62,"line_end":62,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":16},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,117,110,105,99,111,100,101,45,48,46,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2924,"byte_end":2943,"line_start":71,"line_end":71,"column_start":8,"column_end":27},"name":"deunicode_with_tofu","qualname":"::deunicode_with_tofu","value":"fn (s: &str, custom_placeholder: &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Same as `deunicode`, but unknown characters can be replaced with a custom string.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":18},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,117,110,105,99,111,100,101,45,48,46,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3630,"byte_end":3644,"line_start":92,"line_end":92,"column_start":8,"column_end":22},"name":"deunicode_char","qualname":"::deunicode_char","value":"fn (ch: char) -> Option<&'static str>","parent":null,"children":[],"decl_id":null,"docs":" This function takes a single Unicode character and returns an ASCII\n transliteration.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,117,110,105,99,111,100,101,45,48,46,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3613,"byte_end":3622,"line_start":91,"line_end":91,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":20},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,117,110,105,99,111,100,101,45,48,46,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4578,"byte_end":4588,"line_start":116,"line_end":116,"column_start":11,"column_end":21},"name":"AsciiChars","qualname":"::AsciiChars","value":"AsciiChars","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":24}],"decl_id":null,"docs":" Convenience functions for deunicode. `use deunicode::AsciiChars`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,117,110,105,99,111,100,101,45,48,46,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4816,"byte_end":4827,"line_start":121,"line_end":121,"column_start":8,"column_end":19},"name":"ascii_chars","qualname":"::AsciiChars::ascii_chars","value":"fn (&self) -> AsciiCharsIter","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":" Iterate over Unicode characters converted to ASCII sequences.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,117,110,105,99,111,100,101,45,48,46,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5058,"byte_end":5072,"line_start":126,"line_end":126,"column_start":8,"column_end":22},"name":"to_ascii_lossy","qualname":"::AsciiChars::to_ascii_lossy","value":"fn (&self) -> String","parent":{"krate":0,"index":20},"children":[],"decl_id":null,"docs":" Convert any Unicode string to ASCII-only string.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":38},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,117,110,105,99,111,100,101,45,48,46,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5610,"byte_end":5624,"line_start":150,"line_end":150,"column_start":12,"column_end":26},"name":"AsciiCharsIter","qualname":"::AsciiCharsIter","value":"AsciiCharsIter {  }","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":25}],"decl_id":null,"docs":" Iterator that translates Unicode characters to ASCII strings.pub","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,117,110,105,99,111,100,101,45,48,46,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5756,"byte_end":5759,"line_start":157,"line_end":157,"column_start":12,"column_end":15},"name":"new","qualname":"<AsciiCharsIter>::new","value":"fn (unicode_string: &'a str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,117,110,105,99,111,100,101,45,48,46,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5735,"byte_end":5744,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,117,110,105,99,111,100,101,45,48,46,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5114,"byte_end":5120,"line_start":129,"line_end":129,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,117,110,105,99,111,100,101,45,48,46,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5710,"byte_end":5724,"line_start":155,"line_end":155,"column_start":10,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":42}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,117,110,105,99,111,100,101,45,48,46,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5980,"byte_end":5994,"line_start":166,"line_end":166,"column_start":28,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,117,110,105,99,111,100,101,45,48,46,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6025,"byte_end":6039,"line_start":168,"line_end":168,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,117,110,105,99,111,100,101,45,48,46,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5114,"byte_end":5120,"line_start":129,"line_end":129,"column_start":21,"column_end":27},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":5,"index":5512},"to":{"krate":0,"index":20}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,117,110,105,99,111,100,101,45,48,46,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5710,"byte_end":5724,"line_start":155,"line_end":155,"column_start":10,"column_end":24},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":38},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,117,110,105,99,111,100,101,45,48,46,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5980,"byte_end":5994,"line_start":166,"line_end":166,"column_start":28,"column_end":42},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":38},"to":{"krate":2,"index":4592}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,100,101,117,110,105,99,111,100,101,45,48,46,52,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6025,"byte_end":6039,"line_start":168,"line_end":168,"column_start":23,"column_end":37},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":38},"to":{"krate":2,"index":4340}}]}