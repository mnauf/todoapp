{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.2","compilation":{"directory":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48],"program":"/home/naufil/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","unic_segment","/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=8bb77c22bc8d0909","-C","extra-filename=-8bb77c22bc8d0909","--out-dir","/home/naufil/Desktop/rust/3june/todocopy/target/rls/debug/deps","-L","dependency=/home/naufil/Desktop/rust/3june/todocopy/target/rls/debug/deps","--extern","unic_ucd_segment=/home/naufil/Desktop/rust/3june/todocopy/target/rls/debug/deps/libunic_ucd_segment-7ffb94eae94a6884.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/naufil/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":[47,104,111,109,101,47,110,97,117,102,105,108,47,68,101,115,107,116,111,112,47,114,117,115,116,47,51,106,117,110,101,47,116,111,100,111,99,111,112,121,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,117,110,105,99,95,115,101,103,109,101,110,116,45,56,98,98,55,55,99,50,50,98,99,56,100,48,57,48,57,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"unic_segment","disambiguator":[13619435821535752109,12884074985066959267]},"crate_root":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src","external_crates":[{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[1137707474377317163,881293823083572693]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[16254816028303588237,6669189139375923666]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7111806954579578569,2199841390691958019]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6021837240640825503,11520007856923678909]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12444724012878050064,2416873571855687959]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6979589238717360547,5382701582921578244]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14383072016947483551,11019396538837452451]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":8,"id":{"name":"rustc_demangle","disambiguator":[15664728184530138178,15668582881963515515]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[16547370833325286379,14798728708606514427]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[3405404226459150258,2890948387317429027]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":11,"id":{"name":"unic_ucd_segment","disambiguator":[17463603461279651222,17414904932236516919]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":12,"id":{"name":"unic_char_property","disambiguator":[13408095515662774646,13943037847921889517]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":13,"id":{"name":"unic_char_range","disambiguator":[18232507164554869144,15398105776224982872]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":14,"id":{"name":"unic_ucd_version","disambiguator":[14389282995764196172,4176738503897694884]}},{"file_name":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","num":15,"id":{"name":"unic_common","disambiguator":[8362730400559627856,59505032023344073]}}],"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":481,"byte_end":2874,"line_start":12,"line_end":89,"column_start":1,"column_end":53}},"imports":[{"kind":"Use","ref_id":{"krate":11,"index":110},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2620,"byte_end":2635,"line_start":80,"line_end":80,"column_start":27,"column_end":42},"alias_span":null,"name":"UNICODE_VERSION","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":16},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2671,"byte_end":2686,"line_start":83,"line_end":83,"column_start":20,"column_end":35},"alias_span":null,"name":"PKG_DESCRIPTION","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":14},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2688,"byte_end":2696,"line_start":83,"line_end":83,"column_start":37,"column_end":45},"alias_span":null,"name":"PKG_NAME","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":12},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2698,"byte_end":2709,"line_start":83,"line_end":83,"column_start":47,"column_end":58},"alias_span":null,"name":"PKG_VERSION","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":220},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2746,"byte_end":2760,"line_start":86,"line_end":86,"column_start":20,"column_end":34},"alias_span":null,"name":"GraphemeCursor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2762,"byte_end":2780,"line_start":86,"line_end":86,"column_start":36,"column_end":54},"alias_span":null,"name":"GraphemeIncomplete","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":194},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2782,"byte_end":2797,"line_start":86,"line_end":86,"column_start":56,"column_end":71},"alias_span":null,"name":"GraphemeIndices","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":200},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2799,"byte_end":2808,"line_start":86,"line_end":86,"column_start":73,"column_end":82},"alias_span":null,"name":"Graphemes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":258},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2837,"byte_end":2853,"line_start":89,"line_end":89,"column_start":16,"column_end":32},"alias_span":null,"name":"WordBoundIndices","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":252},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2855,"byte_end":2865,"line_start":89,"line_end":89,"column_start":34,"column_end":44},"alias_span":null,"name":"WordBounds","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":122},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2867,"byte_end":2872,"line_start":89,"line_end":89,"column_start":46,"column_end":51},"alias_span":null,"name":"Words","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":481,"byte_end":2874,"line_start":12,"line_end":89,"column_start":1,"column_end":53},"name":"","qualname":"::","value":"/home/naufil/.cargo/registry/src/github.com-1ecc6299db9ec823/unic-segment-0.7.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":18},{"krate":0,"index":26},{"krate":0,"index":104},{"krate":0,"index":114},{"krate":0,"index":186}],"decl_id":null,"docs":" # UNIC — Unicode Text Segmentation Algorithms","sig":null,"attributes":[{"value":"forbid(unsafe_code, missing_docs)","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2479,"byte_end":2516,"line_start":73,"line_end":73,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":12},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,112,107,103,95,105,110,102,111,46,114,115],"byte_start":3368,"byte_end":3379,"line_start":14,"line_end":14,"column_start":11,"column_end":22},"name":"PKG_VERSION","qualname":"::pkg_info::PKG_VERSION","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" UNIC component version.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":14},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,112,107,103,95,105,110,102,111,46,114,115],"byte_start":3451,"byte_end":3459,"line_start":17,"line_end":17,"column_start":11,"column_end":19},"name":"PKG_NAME","qualname":"::pkg_info::PKG_NAME","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" UNIC component name.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":16},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,112,107,103,95,105,110,102,111,46,114,115],"byte_start":3535,"byte_end":3550,"line_start":20,"line_end":20,"column_start":11,"column_end":26},"name":"PKG_DESCRIPTION","qualname":"::pkg_info::PKG_DESCRIPTION","value":"&str","parent":null,"children":[],"decl_id":null,"docs":" UNIC component description.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":194},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":4373,"byte_end":4388,"line_start":24,"line_end":24,"column_start":12,"column_end":27},"name":"GraphemeIndices","qualname":"::grapheme::GraphemeIndices","value":"GraphemeIndices {  }","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":83}],"decl_id":null,"docs":" External iterator for grapheme clusters and byte offsets.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":4566,"byte_end":4569,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<GraphemeIndices>::new","value":"fn <'b> (s: &'b str) -> GraphemeIndices<'b>","parent":null,"children":[],"decl_id":null,"docs":" Create new iterator for *extended grapheme clusters*.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":4545,"byte_end":4554,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":4823,"byte_end":4833,"line_start":41,"line_end":41,"column_start":12,"column_end":22},"name":"new_legacy","qualname":"<GraphemeIndices>::new_legacy","value":"fn <'b> (s: &'b str) -> GraphemeIndices<'b>","parent":null,"children":[],"decl_id":null,"docs":" Create new iterator for *legacy grapheme clusters*.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":4802,"byte_end":4811,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":5450,"byte_end":5456,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"as_str","qualname":"<GraphemeIndices>::as_str","value":"fn (&self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data (the part yet to be iterated) as a slice of the original string.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":5013,"byte_end":5022,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":200},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":6279,"byte_end":6288,"line_start":94,"line_end":94,"column_start":12,"column_end":21},"name":"Graphemes","qualname":"::grapheme::Graphemes","value":"Graphemes {  }","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":93}],"decl_id":null,"docs":" External iterator for a string's\n [grapheme clusters](https://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":6492,"byte_end":6495,"line_start":103,"line_end":103,"column_start":12,"column_end":15},"name":"new","qualname":"<Graphemes>::new","value":"fn <'b> (s: &'b str) -> Graphemes<'b>","parent":null,"children":[],"decl_id":null,"docs":" Create new iterator for *extended grapheme clusters*.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":6471,"byte_end":6480,"line_start":102,"line_end":102,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":6808,"byte_end":6818,"line_start":114,"line_end":114,"column_start":12,"column_end":22},"name":"new_legacy","qualname":"<Graphemes>::new_legacy","value":"fn <'b> (s: &'b str) -> Graphemes<'b>","parent":null,"children":[],"decl_id":null,"docs":" Create new iterator for *legacy grapheme clusters*.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":6787,"byte_end":6796,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":7489,"byte_end":7495,"line_start":136,"line_end":136,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Graphemes>::as_str","value":"fn (&self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data (the part yet to be iterated) as a slice of the original string.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":7064,"byte_end":7073,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":220},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":9273,"byte_end":9287,"line_start":196,"line_end":196,"column_start":12,"column_end":26},"name":"GraphemeCursor","qualname":"::grapheme::GraphemeCursor","value":"GraphemeCursor {  }","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":133}],"decl_id":null,"docs":" Cursor-based segmenter for grapheme clusters.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":135},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":10861,"byte_end":10871,"line_start":236,"line_end":236,"column_start":5,"column_end":15},"name":"PreContext","qualname":"::grapheme::GraphemeIncomplete::PreContext","value":"GraphemeIncomplete::PreContext(usize)","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" More pre-context is needed. The caller should call `provide_context`\n with a chunk ending at the offset given, then retry the query. This\n will only be returned if the `chunk_start` parameter is nonzero.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":141},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":11113,"byte_end":11122,"line_start":241,"line_end":241,"column_start":5,"column_end":14},"name":"PrevChunk","qualname":"::grapheme::GraphemeIncomplete::PrevChunk","value":"GraphemeIncomplete::PrevChunk","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" When requesting `prev_boundary`, the cursor is moving past the beginning\n of the current chunk, so the chunk before that is requested. This will\n only be returned if the `chunk_start` parameter is nonzero.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":145},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":11396,"byte_end":11405,"line_start":247,"line_end":247,"column_start":5,"column_end":14},"name":"NextChunk","qualname":"::grapheme::GraphemeIncomplete::NextChunk","value":"GraphemeIncomplete::NextChunk","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" When requesting `next_boundary`, the cursor is moving past the end of the\n current chunk, so the chunk after that is requested. This will only be\n returned if the chunk ends before the `len` parameter provided on\n creation of the cursor.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":149},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":11541,"byte_end":11554,"line_start":250,"line_end":250,"column_start":5,"column_end":18},"name":"InvalidOffset","qualname":"::grapheme::GraphemeIncomplete::InvalidOffset","value":"GraphemeIncomplete::InvalidOffset","parent":{"krate":0,"index":226},"children":[],"decl_id":null,"docs":" An error returned when the chunk given does not contain the cursor position.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":226},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":10610,"byte_end":10628,"line_start":232,"line_end":232,"column_start":10,"column_end":28},"name":"GraphemeIncomplete","qualname":"::grapheme::GraphemeIncomplete","value":"GraphemeIncomplete::{PreContext, PrevChunk, NextChunk, InvalidOffset}","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":141},{"krate":0,"index":145},{"krate":0,"index":149}],"decl_id":null,"docs":" An error return indicating that not enough content was available in the\n provided chunk to satisfy the query, and that more content must be provided.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":10601,"byte_end":11557,"line_start":232,"line_end":251,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":14638,"byte_end":14641,"line_start":334,"line_end":334,"column_start":12,"column_end":15},"name":"new","qualname":"<GraphemeCursor>::new","value":"fn (offset: usize, len: usize) -> GraphemeCursor","parent":null,"children":[],"decl_id":null,"docs":" Create a new cursor. The string and initial offset are given at creation\n time, but the contents of the string are not.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":15615,"byte_end":15625,"line_start":364,"line_end":364,"column_start":12,"column_end":22},"name":"new_legacy","qualname":"<GraphemeCursor>::new_legacy","value":"fn (offset: usize, len: usize) -> GraphemeCursor","parent":null,"children":[],"decl_id":null,"docs":" Create a new cursor. The string and initial offset are given at creation\n time, but the contents of the string are not.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":16561,"byte_end":16571,"line_start":394,"line_end":394,"column_start":12,"column_end":22},"name":"set_cursor","qualname":"<GraphemeCursor>::set_cursor","value":"fn (&mut self, offset: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the cursor to a new location in the same string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":17666,"byte_end":17676,"line_start":422,"line_end":422,"column_start":12,"column_end":22},"name":"cur_cursor","qualname":"<GraphemeCursor>::cur_cursor","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The current offset of the cursor. Equal to the last value provided to\n `new()` or `set_cursor()`, or returned from `next_boundary()` or\n `prev_boundary()`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":18902,"byte_end":18917,"line_start":450,"line_end":450,"column_start":12,"column_end":27},"name":"provide_context","qualname":"<GraphemeCursor>::provide_context","value":"fn (&mut self, chunk: &str, chunk_start: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Provide additional pre-context when it is needed to decide a boundary.\n The end of the chunk must coincide with the value given in the\n `GraphemeIncomplete::PreContext` request.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":22792,"byte_end":22803,"line_start":554,"line_end":554,"column_start":12,"column_end":23},"name":"is_boundary","qualname":"<GraphemeCursor>::is_boundary","value":"fn (&mut self, chunk: &str, chunk_start: usize) -> Result<bool, GraphemeIncomplete>","parent":null,"children":[],"decl_id":null,"docs":" Determine whether the current cursor location is a grapheme cluster boundary.\n Only a part of the string need be supplied. If `chunk_start` is nonzero or\n the length of `chunk` is not equal to `len` on creation, then this method\n may return `GraphemeIncomplete::PreContext`. The caller should then\n call `provide_context` with the requested chunk, then retry calling this\n method.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":26934,"byte_end":26947,"line_start":647,"line_end":647,"column_start":12,"column_end":25},"name":"next_boundary","qualname":"<GraphemeCursor>::next_boundary","value":"fn (&mut self, chunk: &str, chunk_start: usize) -> Result<Option<usize>, GraphemeIncomplete>","parent":null,"children":[],"decl_id":null,"docs":" Find the next boundary after the current cursor position. Only a part of\n the string need be supplied. If the chunk is incomplete, then this\n method might return `GraphemeIncomplete::PreContext` or\n `GraphemeIncomplete::NextChunk`. In the former case, the caller should\n call `provide_context` with the requested chunk, then retry. In the\n latter case, the caller should provide the chunk following the one\n given, then retry.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":30316,"byte_end":30329,"line_start":726,"line_end":726,"column_start":12,"column_end":25},"name":"prev_boundary","qualname":"<GraphemeCursor>::prev_boundary","value":"fn (&mut self, chunk: &str, chunk_start: usize) -> Result<Option<usize>, GraphemeIncomplete>","parent":null,"children":[],"decl_id":null,"docs":" Find the previous boundary after the current cursor position. Only a part\n of the string need be supplied. If the chunk is incomplete, then this\n method might return `GraphemeIncomplete::PreContext` or\n `GraphemeIncomplete::PrevChunk`. In the former case, the caller should\n call `provide_context` with the requested chunk, then retry. In the\n latter case, the caller should provide the chunk preceding the one\n given, then retry.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":122},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":34521,"byte_end":34526,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"name":"Words","qualname":"::word::Words","value":"Words {  }","parent":null,"children":[{"krate":0,"index":47}],"decl_id":null,"docs":" An iterator over the substrings of a string which, after splitting the string on [word\n boundaries](https://www.unicode.org/reports/tr29/#Word_Boundaries), contain any characters with\n the [Alphabetic](http://unicode.org/reports/tr44/#Alphabetic) property, or with\n [General_Category=Number](http://unicode.org/reports/tr44/#General_Category_Values).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":34978,"byte_end":34981,"line_start":50,"line_end":50,"column_start":12,"column_end":15},"name":"new","qualname":"<Words>::new","value":"fn <'b> (s: &'b str, filter: fn(&&str) -> bool) -> Words<'b>","parent":null,"children":[],"decl_id":null,"docs":" Create new iterator for *words*.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":34957,"byte_end":34966,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":252},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":35272,"byte_end":35282,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"WordBounds","qualname":"::word::WordBounds","value":"WordBounds {  }","parent":null,"children":[{"krate":0,"index":175},{"krate":0,"index":177},{"krate":0,"index":179}],"decl_id":null,"docs":" External iterator for a string's\n [word boundaries](https://www.unicode.org/reports/tr29/#Word_Boundaries).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":258},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":35444,"byte_end":35460,"line_start":68,"line_end":68,"column_start":12,"column_end":28},"name":"WordBoundIndices","qualname":"::word::WordBoundIndices","value":"WordBoundIndices {  }","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":187}],"decl_id":null,"docs":" External iterator for word boundaries and byte offsets.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":35646,"byte_end":35649,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<WordBoundIndices>::new","value":"fn <'b> (s: &'b str) -> WordBoundIndices<'b>","parent":null,"children":[],"decl_id":null,"docs":" Create new iterator for *word boundries and their indices*.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":35625,"byte_end":35634,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":36284,"byte_end":36290,"line_start":97,"line_end":97,"column_start":12,"column_end":18},"name":"as_str","qualname":"<WordBoundIndices>::as_str","value":"fn (&self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data (the part yet to be iterated) as a slice of the original string.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":35825,"byte_end":35834,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":57301,"byte_end":57304,"line_start":628,"line_end":628,"column_start":12,"column_end":15},"name":"new","qualname":"<WordBounds>::new","value":"fn (s: &str) -> WordBounds","parent":null,"children":[],"decl_id":null,"docs":" Create new iterator for *word boundries*.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":57280,"byte_end":57289,"line_start":627,"line_end":627,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":57889,"byte_end":57895,"line_start":650,"line_end":650,"column_start":12,"column_end":18},"name":"as_str","qualname":"<WordBounds>::as_str","value":"fn (&self) -> &'a str","parent":null,"children":[],"decl_id":null,"docs":" View the underlying data (the part yet to be iterated) as a slice of the original string.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":57442,"byte_end":57451,"line_start":636,"line_end":636,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":4457,"byte_end":4472,"line_start":29,"line_end":29,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":5535,"byte_end":5550,"line_start":66,"line_end":66,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":5909,"byte_end":5924,"line_start":82,"line_end":82,"column_start":34,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":6389,"byte_end":6398,"line_start":100,"line_end":100,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":7625,"byte_end":7634,"line_start":141,"line_end":141,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":8210,"byte_end":8219,"line_start":161,"line_end":161,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":70}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":14149,"byte_end":14163,"line_start":322,"line_end":322,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":34612,"byte_end":34617,"line_start":31,"line_end":31,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":34776,"byte_end":34781,"line_start":40,"line_end":40,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":34900,"byte_end":34905,"line_start":47,"line_end":47,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":35530,"byte_end":35546,"line_start":73,"line_end":73,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":36369,"byte_end":36385,"line_start":102,"line_end":102,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":36744,"byte_end":36760,"line_start":118,"line_end":118,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":37595,"byte_end":37605,"line_start":160,"line_end":160,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":47888,"byte_end":47898,"line_start":400,"line_end":400,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":57209,"byte_end":57219,"line_start":625,"line_end":625,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":4457,"byte_end":4472,"line_start":29,"line_end":29,"column_start":10,"column_end":25},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":194},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":5535,"byte_end":5550,"line_start":66,"line_end":66,"column_start":23,"column_end":38},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":194},"to":{"krate":2,"index":4340}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":5909,"byte_end":5924,"line_start":82,"line_end":82,"column_start":34,"column_end":49},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":194},"to":{"krate":2,"index":4480}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":6389,"byte_end":6398,"line_start":100,"line_end":100,"column_start":10,"column_end":19},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":7625,"byte_end":7634,"line_start":141,"line_end":141,"column_start":23,"column_end":32},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":200},"to":{"krate":2,"index":4340}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":8210,"byte_end":8219,"line_start":161,"line_end":161,"column_start":34,"column_end":43},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":200},"to":{"krate":2,"index":4480}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,103,114,97,112,104,101,109,101,46,114,115],"byte_start":14149,"byte_end":14163,"line_start":322,"line_end":322,"column_start":6,"column_end":20},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":34612,"byte_end":34617,"line_start":31,"line_end":31,"column_start":23,"column_end":28},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":122},"to":{"krate":2,"index":4340}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":34776,"byte_end":34781,"line_start":40,"line_end":40,"column_start":34,"column_end":39},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":122},"to":{"krate":2,"index":4480}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":34900,"byte_end":34905,"line_start":47,"line_end":47,"column_start":10,"column_end":15},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":122},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":35530,"byte_end":35546,"line_start":73,"line_end":73,"column_start":10,"column_end":26},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":258},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":36369,"byte_end":36385,"line_start":102,"line_end":102,"column_start":23,"column_end":39},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":258},"to":{"krate":2,"index":4340}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":36744,"byte_end":36760,"line_start":118,"line_end":118,"column_start":34,"column_end":50},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":258},"to":{"krate":2,"index":4480}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":37595,"byte_end":37605,"line_start":160,"line_end":160,"column_start":23,"column_end":33},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":252},"to":{"krate":2,"index":4340}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":47888,"byte_end":47898,"line_start":400,"line_end":400,"column_start":34,"column_end":44},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":252},"to":{"krate":2,"index":4480}},{"span":{"file_name":[47,104,111,109,101,47,110,97,117,102,105,108,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,117,110,105,99,45,115,101,103,109,101,110,116,45,48,46,55,46,48,47,115,114,99,47,119,111,114,100,46,114,115],"byte_start":57209,"byte_end":57219,"line_start":625,"line_end":625,"column_start":10,"column_end":20},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":252},"to":{"krate":4294967295,"index":4294967295}}]}